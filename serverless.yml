service: rest-api

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: us-east-1

# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#            - "/*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
#package:
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

functions:
  functions: # add 4 functions for CRUD
  create:
    handler: handler.create # point to exported create function in handler.js
    events:
      - http:
          path: users # path will be domain.name.com/dev/users
          method: post
          cors: true
  getOne:
    handler: handler.getOne
    events:
      - http:
          path: users/{id} # path will be domain.name.com/dev/users/1
          method: get
          cors: true
  getAll:
    handler: handler.getAll # path will be domain.name.com/dev/users
    events:
     - http:
         path: users
         method: get
         cors: true
  update:
    handler: handler.update # path will be domain.name.com/dev/users/1
    events:
     - http:
         path: users/{id}
         method: put
         cors: true
  delete:
    handler: handler.delete
    events:
     - http:
         path: users/{id} # path will be domain.name.com/dev/users/1
         method: delete
         cors: true
  filter:
    handler: handler.filter
    events: 
     - http:
         path: users
         method: filter
         cors: true
plugins:
- serverless-offline
